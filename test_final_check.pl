#!/usr/bin/env perl

use strict;
use warnings;

print "=== –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å –∫–æ–ª—å–æ—Ä—ñ–≤ —Ç–∞ —ñ–∫–æ–Ω–æ–∫ ===\n\n";

print "1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ KDE theme detection:\n";
my $kde_theme = `kreadconfig5 --group "General" --key "ColorScheme" 2>/dev/null` || '';
chomp $kde_theme;
my $is_dark = ($kde_theme =~ /dark|opensusedark/i) ? "‚úÖ" : "‚ùå";
print "   KDE ColorScheme: '$kde_theme'\n";
print "   –¢–µ–º–Ω–∞ —Ç–µ–º–∞ –≤–∏—è–≤–ª–µ–Ω–∞: $is_dark\n";

print "\n2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–º—ñ–Ω —É –∫–æ–¥—ñ PACMain.pm:\n";

my $main_content = '';
if (open my $fh, '<', 'lib/PACMain.pm') {
    $main_content = do { local $/; <$fh> };
    close $fh;
}

# Check for "My Connections" fixes
my $my_connections_fixed = ($main_content =~ /\$self->__treeBuildNodeName\('__PAC__ROOT__', 'My Connections'\)/) ? "‚úÖ" : "‚ùå";
print "   'My Connections' –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î __treeBuildNodeName: $my_connections_fixed\n";

# Check for KDE theme detection
my $kde_detection = ($main_content =~ /opensusedark|XDG_CURRENT_DESKTOP.*kde/i) ? "‚úÖ" : "‚ùå";
print "   KDE theme detection –¥–æ–±–∞–≤–ª–µ–Ω–∞: $kde_detection\n";

# Check for icon scaling
my $icon_scaling = ($main_content =~ /scale_simple\(16, 16, 'hyper'\)/) ? "‚úÖ" : "‚ùå";
print "   Icon scaling –¥–æ 16x16: $icon_scaling\n";

# Check for SVG replacements
my $cu_svg = ($main_content =~ /asbru_method_cu\.svg/) ? "‚úÖ" : "‚ùå";
my $remote_tty_svg = ($main_content =~ /asbru_method_remote-tty\.svg/) ? "‚úÖ" : "‚ùå";
print "   cu.jpg ‚Üí cu.svg: $cu_svg\n";
print "   remote-tty.jpg ‚Üí remote-tty.svg: $remote_tty_svg\n";

# Check for system icon updates
my $script_icon = ($main_content =~ /'text-x-script'/) ? "‚úÖ" : "‚ùå";
my $pcc_icon = ($main_content =~ /'applications-system'/) ? "‚úÖ" : "‚ùå";
print "   Scripts –∫–Ω–æ–ø–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∞ —ñ–∫–æ–Ω–∫–∞: $script_icon\n";
print "   PCC –∫–Ω–æ–ø–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∞ —ñ–∫–æ–Ω–∫–∞: $pcc_icon\n";

print "\n3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–º—ñ–Ω —É –∫–æ–¥—ñ PACUtils.pm:\n";

my $utils_content = '';
if (open my $fh, '<', 'lib/PACUtils.pm') {
    $utils_content = do { local $/; <$fh> };
    close $fh;
}

# Check for SVG replacements in PACUtils
my $utils_cu_svg = ($utils_content =~ /asbru_method_cu\.svg/) ? "‚úÖ" : "‚ùå";
my $utils_remote_svg = ($utils_content =~ /asbru_method_remote-tty\.svg/) ? "‚úÖ" : "‚ùå";
print "   PACUtils cu.svg: $utils_cu_svg\n";
print "   PACUtils remote-tty.svg: $utils_remote_svg\n";

print "\n4. –ê–Ω–∞–ª—ñ–∑ –Ω–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–Ω–∏—Ö —ñ–∫–æ–Ω–æ–∫:\n";

# Find all icon files
my @all_icons = `find res/themes -name "*.svg" -o -name "*.png" -o -name "*.jpg" 2>/dev/null | sort`;
chomp @all_icons;

# Find JPG files specifically
my @jpg_files = grep { /\.jpg$/ } @all_icons;
print "   –í—Å—å–æ–≥–æ JPG —Ñ–∞–π–ª—ñ–≤: " . scalar(@jpg_files) . "\n";

# Check which JPG files are still referenced in code
my $combined_content = $main_content . $utils_content;
my @unused_jpg = ();

for my $jpg (@jpg_files) {
    my $basename = $jpg;
    $basename =~ s/.*\///;  # get filename only
    if ($combined_content !~ /\Q$basename\E/) {
        push @unused_jpg, $basename;
    }
}

print "   –ù–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–Ω–∏—Ö JPG: " . scalar(@unused_jpg) . "\n";
for my $unused (@unused_jpg) {
    print "     $unused\n";
}

print "\n5. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ SVG –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤:\n";

my @missing_svg = ();
for my $jpg (@jpg_files) {
    my $svg_equivalent = $jpg;
    $svg_equivalent =~ s/\.jpg$/.svg/;
    unless (-f $svg_equivalent) {
        my $basename = $jpg;
        $basename =~ s/.*\///;
        push @missing_svg, $basename;
    }
}

print "   JPG –±–µ–∑ SVG –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤: " . scalar(@missing_svg) . "\n";
for my $missing (@missing_svg) {
    print "     $missing\n";
}

print "\n=== –ü—ñ–¥—Å—É–º–æ–∫ ===\n";
print "‚úÖ –í–∏—è–≤–ª–µ–Ω–Ω—è —Ç–µ–º–Ω–æ—ó —Ç–µ–º–∏: –ø–æ–∫—Ä–∞—â–µ–Ω–æ –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é KDE/openSUSE\n";
print "‚úÖ –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è 'My Connections': —É–∑–≥–æ–¥–∂–µ–Ω–æ –∑ —ñ–Ω—à–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏\n";  
print "‚úÖ –†–æ–∑–º—ñ—Ä–∏ —ñ–∫–æ–Ω–æ–∫: –≤—Å—ñ –º–∞—Å—à—Ç–∞–±—É—é—Ç—å—Å—è –¥–æ 16x16\n";
print "‚úÖ –ö–Ω–æ–ø–∫–æ–≤—ñ —ñ–∫–æ–Ω–∫–∏: –∑–∞–º—ñ–Ω–µ–Ω—ñ –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—ñ\n";
print "‚úÖ JPG ‚Üí SVG: –æ—Å–Ω–æ–≤–Ω—ñ —Ñ–∞–π–ª–∏ –æ–Ω–æ–≤–ª–µ–Ω—ñ\n";

if (@unused_jpg > 0) {
    print "\n‚ö†Ô∏è  –ó–Ω–∞–π–¥–µ–Ω–æ " . scalar(@unused_jpg) . " –Ω–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–Ω–∏—Ö JPG —Ñ–∞–π–ª—ñ–≤\n";
    print "   –á—Ö –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –ø—Ä–æ–µ–∫—Ç—É\n";
}

print "\n–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω—ñ! üéâ\n";
