name: Build Packages

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container_engine: [docker, podman]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Podman (if selected)
        if: matrix.container_engine == 'podman'
        uses: kupcimat/setup-podman@v1

      - name: Install build deps (Debian/RPM)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential debhelper devscripts lintian rpm

      - name: Build Debian package
        run: |
          ./make_debian.sh
          ls -1 *.deb || true

      - name: Build RPM package
        run: |
          bash dist/rpm/build_rpm.sh
          ls -1 dist/rpm/RPMS/*/*.rpm || true

      - name: Build AppImage (containerized)
        run: |
          if command -v docker >/dev/null 2>&1; then ENGINE=docker; elif command -v podman >/dev/null 2>&1; then ENGINE=podman; else echo 'no engine' && exit 0; fi
          bash dist/appimage/make_appimage.sh || true
          ls -1 dist/release/*.AppImage || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: asbru-cm-${{ github.ref_name }}-${{ matrix.container_engine }}
          path: |
            *.deb
            dist/rpm/RPMS/*/*.rpm
            dist/release/*.AppImage
          if-no-files-found: ignore

  release:
    # Run only once (don't need matrix); waits for all build variants
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: collected
      - name: Display collected artifacts
        run: |
          find collected -type f -maxdepth 3 -printf '%P\n'
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          name: Ásbrú CM ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            collected/**/asbru-cm_*.deb
            collected/**/asbru-cm-*.rpm
            collected/**/Asbru-CM*.AppImage
          generate_release_notes: true
          body: |
            Automated release for ${{ github.ref_name }}.
            This tag triggers DEB, RPM and AppImage builds.
            Refer to CHANGELOG.md for detailed changes.
